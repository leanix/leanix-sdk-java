/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.396
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import net.leanix.api.models.FacetViewState;
import net.leanix.api.models.MetaData;

/**
 * UpdateViewActionPayload
 */

public class UpdateViewActionPayload {
  @JsonProperty("renderType")
  private String renderType = null;

  @JsonProperty("readOnly")
  private Boolean readOnly = false;

  @JsonProperty("visible")
  private Boolean visible = false;

  @JsonProperty("size")
  private Integer size = null;

  @JsonProperty("metadata")
  private MetaData metadata = null;

  @JsonProperty("facetViewStates")
  private List<FacetViewState> facetViewStates = new ArrayList<FacetViewState>();

  public UpdateViewActionPayload renderType(String renderType) {
    this.renderType = renderType;
    return this;
  }

   /**
   * Get renderType
   * @return renderType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRenderType() {
    return renderType;
  }

  public void setRenderType(String renderType) {
    this.renderType = renderType;
  }

  public UpdateViewActionPayload readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public UpdateViewActionPayload visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public UpdateViewActionPayload size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * minimum: 1
   * maximum: 12
   * @return size
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public UpdateViewActionPayload metadata(MetaData metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "null", value = "")
  public MetaData getMetadata() {
    return metadata;
  }

  public void setMetadata(MetaData metadata) {
    this.metadata = metadata;
  }

  public UpdateViewActionPayload facetViewStates(List<FacetViewState> facetViewStates) {
    this.facetViewStates = facetViewStates;
    return this;
  }

  public UpdateViewActionPayload addFacetViewStatesItem(FacetViewState facetViewStatesItem) {
    this.facetViewStates.add(facetViewStatesItem);
    return this;
  }

   /**
   * Get facetViewStates
   * @return facetViewStates
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<FacetViewState> getFacetViewStates() {
    return facetViewStates;
  }

  public void setFacetViewStates(List<FacetViewState> facetViewStates) {
    this.facetViewStates = facetViewStates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateViewActionPayload updateViewActionPayload = (UpdateViewActionPayload) o;
    return Objects.equals(this.renderType, updateViewActionPayload.renderType) &&
        Objects.equals(this.readOnly, updateViewActionPayload.readOnly) &&
        Objects.equals(this.visible, updateViewActionPayload.visible) &&
        Objects.equals(this.size, updateViewActionPayload.size) &&
        Objects.equals(this.metadata, updateViewActionPayload.metadata) &&
        Objects.equals(this.facetViewStates, updateViewActionPayload.facetViewStates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(renderType, readOnly, visible, size, metadata, facetViewStates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateViewActionPayload {\n");
    
    sb.append("    renderType: ").append(toIndentedString(renderType)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    facetViewStates: ").append(toIndentedString(facetViewStates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

