/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.170
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * MetaFactSheetType
 */

public class MetaFactSheetType {

  @JsonProperty("key")
  private String key = null;

  @JsonProperty("factSheetTypeConfig")
  private MetaFactSheetTypeConfig factSheetTypeConfig = null;

  @JsonProperty("translations")
  private Map<String, MetaItemTranslation> translations = new HashMap<String, MetaItemTranslation>();

  @JsonProperty("sections")
  private List<MetaSection> sections = new ArrayList<MetaSection>();

  public MetaFactSheetType key(String key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   **/
  @ApiModelProperty(example = "null", value = "")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public MetaFactSheetType factSheetTypeConfig(MetaFactSheetTypeConfig factSheetTypeConfig) {
    this.factSheetTypeConfig = factSheetTypeConfig;
    return this;
  }

  /**
   * Get factSheetTypeConfig
   * @return factSheetTypeConfig
   **/
  @ApiModelProperty(example = "null", value = "")
  public MetaFactSheetTypeConfig getFactSheetTypeConfig() {
    return factSheetTypeConfig;
  }

  public void setFactSheetTypeConfig(MetaFactSheetTypeConfig factSheetTypeConfig) {
    this.factSheetTypeConfig = factSheetTypeConfig;
  }

  public MetaFactSheetType translations(Map<String, MetaItemTranslation> translations) {
    this.translations = translations;
    return this;
  }

  public MetaFactSheetType putTranslationsItem(String key, MetaItemTranslation translationsItem) {
    this.translations.put(key, translationsItem);
    return this;
  }

  /**
   * Get translations
   * @return translations
   **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, MetaItemTranslation> getTranslations() {
    return translations;
  }

  public void setTranslations(Map<String, MetaItemTranslation> translations) {
    this.translations = translations;
  }

  public MetaFactSheetType sections(List<MetaSection> sections) {
    this.sections = sections;
    return this;
  }

  public MetaFactSheetType addSectionsItem(MetaSection sectionsItem) {
    this.sections.add(sectionsItem);
    return this;
  }

  /**
   * Get sections
   * @return sections
   **/
  @ApiModelProperty(example = "null", value = "")
  public List<MetaSection> getSections() {
    return sections;
  }

  public void setSections(List<MetaSection> sections) {
    this.sections = sections;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaFactSheetType metaFactSheetType = (MetaFactSheetType) o;
    return Objects.equals(this.key, metaFactSheetType.key) &&
        Objects.equals(this.factSheetTypeConfig, metaFactSheetType.factSheetTypeConfig) &&
        Objects.equals(this.translations, metaFactSheetType.translations) &&
        Objects.equals(this.sections, metaFactSheetType.sections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, factSheetTypeConfig, translations, sections);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaFactSheetType {\n");

    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    factSheetTypeConfig: ").append(toIndentedString(factSheetTypeConfig)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

