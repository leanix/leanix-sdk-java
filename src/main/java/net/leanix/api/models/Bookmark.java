/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.6-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import net.leanix.api.models.BookmarkWorkingCopy;
import net.leanix.api.models.User;

/**
 * Bookmark
 */

public class Bookmark {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("userId")
  private UUID userId = null;

  @JsonProperty("name")
  private String name = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    INVENTORY("INVENTORY"),
    
    REPORTING("REPORTING"),
    
    VISUALIZER("VISUALIZER"),
    
    DASHBOARD("DASHBOARD"),
    
    INVENTORY_EXPORT("INVENTORY_EXPORT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("groupKey")
  private String groupKey = null;

  @JsonProperty("state")
  private Map<String, Object> state = new HashMap<String, Object>();

  @JsonProperty("workingCopy")
  private BookmarkWorkingCopy workingCopy = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("createdAt")
  private OffsetDateTime createdAt = null;

  @JsonProperty("updatedAt")
  private OffsetDateTime updatedAt = null;

  @JsonProperty("i18nKey")
  private String i18nKey = null;

  @JsonProperty("predefined")
  private Boolean predefined = false;

  @JsonProperty("readonly")
  private Boolean readonly = false;

  @JsonProperty("defaultSharingPriority")
  private Integer defaultSharingPriority = null;

  @JsonProperty("user")
  private User user = null;

  @JsonProperty("permittedReadUserIds")
  private List<UUID> permittedReadUserIds = new ArrayList<UUID>();

  @JsonProperty("permittedWriteUserIds")
  private List<UUID> permittedWriteUserIds = new ArrayList<UUID>();

  @JsonProperty("referencedFactSheetIds")
  private List<UUID> referencedFactSheetIds = new ArrayList<UUID>();

  @JsonProperty("views")
  private Long views = null;

  public Bookmark id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Bookmark userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public Bookmark name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Bookmark type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Bookmark groupKey(String groupKey) {
    this.groupKey = groupKey;
    return this;
  }

   /**
   * Get groupKey
   * @return groupKey
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getGroupKey() {
    return groupKey;
  }

  public void setGroupKey(String groupKey) {
    this.groupKey = groupKey;
  }

  public Bookmark state(Map<String, Object> state) {
    this.state = state;
    return this;
  }

  public Bookmark putStateItem(String key, Object stateItem) {
    this.state.put(key, stateItem);
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Map<String, Object> getState() {
    return state;
  }

  public void setState(Map<String, Object> state) {
    this.state = state;
  }

  public Bookmark workingCopy(BookmarkWorkingCopy workingCopy) {
    this.workingCopy = workingCopy;
    return this;
  }

   /**
   * Get workingCopy
   * @return workingCopy
  **/
  @ApiModelProperty(example = "null", value = "")
  public BookmarkWorkingCopy getWorkingCopy() {
    return workingCopy;
  }

  public void setWorkingCopy(BookmarkWorkingCopy workingCopy) {
    this.workingCopy = workingCopy;
  }

  public Bookmark description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Bookmark createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Bookmark updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Bookmark i18nKey(String i18nKey) {
    this.i18nKey = i18nKey;
    return this;
  }

   /**
   * Get i18nKey
   * @return i18nKey
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getI18nKey() {
    return i18nKey;
  }

  public void setI18nKey(String i18nKey) {
    this.i18nKey = i18nKey;
  }

  public Bookmark predefined(Boolean predefined) {
    this.predefined = predefined;
    return this;
  }

   /**
   * Get predefined
   * @return predefined
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPredefined() {
    return predefined;
  }

  public void setPredefined(Boolean predefined) {
    this.predefined = predefined;
  }

  public Bookmark readonly(Boolean readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Get readonly
   * @return readonly
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Boolean getReadonly() {
    return readonly;
  }

  public void setReadonly(Boolean readonly) {
    this.readonly = readonly;
  }

  public Bookmark defaultSharingPriority(Integer defaultSharingPriority) {
    this.defaultSharingPriority = defaultSharingPriority;
    return this;
  }

   /**
   * Get defaultSharingPriority
   * @return defaultSharingPriority
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDefaultSharingPriority() {
    return defaultSharingPriority;
  }

  public void setDefaultSharingPriority(Integer defaultSharingPriority) {
    this.defaultSharingPriority = defaultSharingPriority;
  }

  public Bookmark user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(example = "null", value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public Bookmark permittedReadUserIds(List<UUID> permittedReadUserIds) {
    this.permittedReadUserIds = permittedReadUserIds;
    return this;
  }

  public Bookmark addPermittedReadUserIdsItem(UUID permittedReadUserIdsItem) {
    this.permittedReadUserIds.add(permittedReadUserIdsItem);
    return this;
  }

   /**
   * Get permittedReadUserIds
   * @return permittedReadUserIds
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<UUID> getPermittedReadUserIds() {
    return permittedReadUserIds;
  }

  public void setPermittedReadUserIds(List<UUID> permittedReadUserIds) {
    this.permittedReadUserIds = permittedReadUserIds;
  }

  public Bookmark permittedWriteUserIds(List<UUID> permittedWriteUserIds) {
    this.permittedWriteUserIds = permittedWriteUserIds;
    return this;
  }

  public Bookmark addPermittedWriteUserIdsItem(UUID permittedWriteUserIdsItem) {
    this.permittedWriteUserIds.add(permittedWriteUserIdsItem);
    return this;
  }

   /**
   * Get permittedWriteUserIds
   * @return permittedWriteUserIds
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<UUID> getPermittedWriteUserIds() {
    return permittedWriteUserIds;
  }

  public void setPermittedWriteUserIds(List<UUID> permittedWriteUserIds) {
    this.permittedWriteUserIds = permittedWriteUserIds;
  }

  public Bookmark referencedFactSheetIds(List<UUID> referencedFactSheetIds) {
    this.referencedFactSheetIds = referencedFactSheetIds;
    return this;
  }

  public Bookmark addReferencedFactSheetIdsItem(UUID referencedFactSheetIdsItem) {
    this.referencedFactSheetIds.add(referencedFactSheetIdsItem);
    return this;
  }

   /**
   * Get referencedFactSheetIds
   * @return referencedFactSheetIds
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<UUID> getReferencedFactSheetIds() {
    return referencedFactSheetIds;
  }

  public void setReferencedFactSheetIds(List<UUID> referencedFactSheetIds) {
    this.referencedFactSheetIds = referencedFactSheetIds;
  }

  public Bookmark views(Long views) {
    this.views = views;
    return this;
  }

   /**
   * Get views
   * @return views
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Long getViews() {
    return views;
  }

  public void setViews(Long views) {
    this.views = views;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bookmark bookmark = (Bookmark) o;
    return Objects.equals(this.id, bookmark.id) &&
        Objects.equals(this.userId, bookmark.userId) &&
        Objects.equals(this.name, bookmark.name) &&
        Objects.equals(this.type, bookmark.type) &&
        Objects.equals(this.groupKey, bookmark.groupKey) &&
        Objects.equals(this.state, bookmark.state) &&
        Objects.equals(this.workingCopy, bookmark.workingCopy) &&
        Objects.equals(this.description, bookmark.description) &&
        Objects.equals(this.createdAt, bookmark.createdAt) &&
        Objects.equals(this.updatedAt, bookmark.updatedAt) &&
        Objects.equals(this.i18nKey, bookmark.i18nKey) &&
        Objects.equals(this.predefined, bookmark.predefined) &&
        Objects.equals(this.readonly, bookmark.readonly) &&
        Objects.equals(this.defaultSharingPriority, bookmark.defaultSharingPriority) &&
        Objects.equals(this.user, bookmark.user) &&
        Objects.equals(this.permittedReadUserIds, bookmark.permittedReadUserIds) &&
        Objects.equals(this.permittedWriteUserIds, bookmark.permittedWriteUserIds) &&
        Objects.equals(this.referencedFactSheetIds, bookmark.referencedFactSheetIds) &&
        Objects.equals(this.views, bookmark.views);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, name, type, groupKey, state, workingCopy, description, createdAt, updatedAt, i18nKey, predefined, readonly, defaultSharingPriority, user, permittedReadUserIds, permittedWriteUserIds, referencedFactSheetIds, views);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bookmark {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    groupKey: ").append(toIndentedString(groupKey)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    workingCopy: ").append(toIndentedString(workingCopy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    i18nKey: ").append(toIndentedString(i18nKey)).append("\n");
    sb.append("    predefined: ").append(toIndentedString(predefined)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    defaultSharingPriority: ").append(toIndentedString(defaultSharingPriority)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    permittedReadUserIds: ").append(toIndentedString(permittedReadUserIds)).append("\n");
    sb.append("    permittedWriteUserIds: ").append(toIndentedString(permittedWriteUserIds)).append("\n");
    sb.append("    referencedFactSheetIds: ").append(toIndentedString(referencedFactSheetIds)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

