/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.396
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import net.leanix.api.models.MetaFacetViewState;

/**
 * MetaFactSheetTypeConfig
 */

public class MetaFactSheetTypeConfig {
  @JsonProperty("maxHierarchyLevel")
  private Integer maxHierarchyLevel = null;

  @JsonProperty("color")
  private String color = null;

  @JsonProperty("bgColor")
  private String bgColor = null;

  @JsonProperty("facetViewStates")
  private List<MetaFacetViewState> facetViewStates = new ArrayList<MetaFacetViewState>();

  public MetaFactSheetTypeConfig maxHierarchyLevel(Integer maxHierarchyLevel) {
    this.maxHierarchyLevel = maxHierarchyLevel;
    return this;
  }

   /**
   * Get maxHierarchyLevel
   * @return maxHierarchyLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaxHierarchyLevel() {
    return maxHierarchyLevel;
  }

  public void setMaxHierarchyLevel(Integer maxHierarchyLevel) {
    this.maxHierarchyLevel = maxHierarchyLevel;
  }

  public MetaFactSheetTypeConfig color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public MetaFactSheetTypeConfig bgColor(String bgColor) {
    this.bgColor = bgColor;
    return this;
  }

   /**
   * Get bgColor
   * @return bgColor
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBgColor() {
    return bgColor;
  }

  public void setBgColor(String bgColor) {
    this.bgColor = bgColor;
  }

  public MetaFactSheetTypeConfig facetViewStates(List<MetaFacetViewState> facetViewStates) {
    this.facetViewStates = facetViewStates;
    return this;
  }

  public MetaFactSheetTypeConfig addFacetViewStatesItem(MetaFacetViewState facetViewStatesItem) {
    this.facetViewStates.add(facetViewStatesItem);
    return this;
  }

   /**
   * Get facetViewStates
   * @return facetViewStates
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<MetaFacetViewState> getFacetViewStates() {
    return facetViewStates;
  }

  public void setFacetViewStates(List<MetaFacetViewState> facetViewStates) {
    this.facetViewStates = facetViewStates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaFactSheetTypeConfig metaFactSheetTypeConfig = (MetaFactSheetTypeConfig) o;
    return Objects.equals(this.maxHierarchyLevel, metaFactSheetTypeConfig.maxHierarchyLevel) &&
        Objects.equals(this.color, metaFactSheetTypeConfig.color) &&
        Objects.equals(this.bgColor, metaFactSheetTypeConfig.bgColor) &&
        Objects.equals(this.facetViewStates, metaFactSheetTypeConfig.facetViewStates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxHierarchyLevel, color, bgColor, facetViewStates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaFactSheetTypeConfig {\n");
    
    sb.append("    maxHierarchyLevel: ").append(toIndentedString(maxHierarchyLevel)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    bgColor: ").append(toIndentedString(bgColor)).append("\n");
    sb.append("    facetViewStates: ").append(toIndentedString(facetViewStates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

