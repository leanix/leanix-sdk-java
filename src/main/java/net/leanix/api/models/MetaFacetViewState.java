/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.396
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * MetaFacetViewState
 */

public class MetaFacetViewState {
  @JsonProperty("facetKey")
  private String facetKey = null;

  @JsonProperty("open")
  private Boolean open = false;

  @JsonProperty("visible")
  private Boolean visible = false;

  public MetaFacetViewState facetKey(String facetKey) {
    this.facetKey = facetKey;
    return this;
  }

   /**
   * Get facetKey
   * @return facetKey
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFacetKey() {
    return facetKey;
  }

  public void setFacetKey(String facetKey) {
    this.facetKey = facetKey;
  }

  public MetaFacetViewState open(Boolean open) {
    this.open = open;
    return this;
  }

   /**
   * Get open
   * @return open
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getOpen() {
    return open;
  }

  public void setOpen(Boolean open) {
    this.open = open;
  }

  public MetaFacetViewState visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaFacetViewState metaFacetViewState = (MetaFacetViewState) o;
    return Objects.equals(this.facetKey, metaFacetViewState.facetKey) &&
        Objects.equals(this.open, metaFacetViewState.open) &&
        Objects.equals(this.visible, metaFacetViewState.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facetKey, open, visible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaFacetViewState {\n");
    
    sb.append("    facetKey: ").append(toIndentedString(facetKey)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

