/*
 * LeanIX Pathfinder REST API
 * Core application for storage and analysis of IT landscape data
 *
 * OpenAPI spec version: 5.0.396
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.leanix.api.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import net.leanix.api.models.StructuredNode;

/**
 * MetaModelActionInputObject
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = UpdateTranslationActionInput.class, name = "UpdateTranslationActionInput"),
  @JsonSubTypes.Type(value = MoveItemActionInput.class, name = "MoveItemActionInput"),
  @JsonSubTypes.Type(value = UpdateViewActionInput.class, name = "UpdateViewActionInput"),
  @JsonSubTypes.Type(value = CreateItemActionInput.class, name = "CreateItemActionInput"),
  @JsonSubTypes.Type(value = UpdateDataActionInput.class, name = "UpdateDataActionInput"),
  @JsonSubTypes.Type(value = DeleteItemActionInput.class, name = "DeleteItemActionInput"),
})

public class MetaModelActionInputObject {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    CREATE_ITEM("CREATE_ITEM"),
    
    UPDATE_DATA("UPDATE_DATA"),
    
    UPDATE_VIEW("UPDATE_VIEW"),
    
    UPDATE_TRANSLATION("UPDATE_TRANSLATION"),
    
    MOVE_ITEM("MOVE_ITEM"),
    
    DELETE_ITEM("DELETE_ITEM");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets subtype
   */
  public enum SubtypeEnum {
    FACT_SHEET_TYPE("FACT_SHEET_TYPE"),
    
    SECTION("SECTION"),
    
    SUBSECTION("SUBSECTION"),
    
    FIELD_FACT_SHEET("FIELD_FACT_SHEET"),
    
    FIELD_EXTERNAL_ID("FIELD_EXTERNAL_ID"),
    
    FIELD_RELATION("FIELD_RELATION"),
    
    FIELD_VALUE("FIELD_VALUE");

    private String value;

    SubtypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubtypeEnum fromValue(String text) {
      for (SubtypeEnum b : SubtypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("subtype")
  private SubtypeEnum subtype = null;

  @JsonProperty("node")
  private StructuredNode node = null;

  @JsonProperty("payload")
  private Object payload = null;

  public MetaModelActionInputObject type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public MetaModelActionInputObject subtype(SubtypeEnum subtype) {
    this.subtype = subtype;
    return this;
  }

   /**
   * Get subtype
   * @return subtype
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public SubtypeEnum getSubtype() {
    return subtype;
  }

  public void setSubtype(SubtypeEnum subtype) {
    this.subtype = subtype;
  }

  public MetaModelActionInputObject node(StructuredNode node) {
    this.node = node;
    return this;
  }

   /**
   * Get node
   * @return node
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public StructuredNode getNode() {
    return node;
  }

  public void setNode(StructuredNode node) {
    this.node = node;
  }

  public MetaModelActionInputObject payload(Object payload) {
    this.payload = payload;
    return this;
  }

   /**
   * Get payload
   * @return payload
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Object getPayload() {
    return payload;
  }

  public void setPayload(Object payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaModelActionInputObject metaModelActionInputObject = (MetaModelActionInputObject) o;
    return Objects.equals(this.type, metaModelActionInputObject.type) &&
        Objects.equals(this.subtype, metaModelActionInputObject.subtype) &&
        Objects.equals(this.node, metaModelActionInputObject.node) &&
        Objects.equals(this.payload, metaModelActionInputObject.payload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, subtype, node, payload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaModelActionInputObject {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    node: ").append(toIndentedString(node)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

